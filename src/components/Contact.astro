---
const contactInfo = [
	{
		icon: 'fas fa-envelope',
		title: 'Email',
		value: 'victormanulrojas@gmail.com',
		link: 'mailto:victormanulrojas@gmail.com'
	},
	{
		icon: 'fas fa-phone',
		title: 'Teléfono',
		value: '+57 3107373705',
		link: 'tel:+573107373705'
	},
	{
		icon: 'fas fa-map-marker-alt',
		title: 'Ubicación',
		value: 'Colombia',
		link: '#'
	}
];
---

<section id="contacto" class="contact section">
	<h2 class="section-title">Contacto</h2>

	<div class="container contact-container">
		<div class="contact-info glass fade-in">
			<h3>Información de Contacto</h3>
			<div class="info-grid">
				{contactInfo.map(info => (
					<a href={info.link} class="info-card" target="_blank" rel="noopener noreferrer">
						<div class="info-icon">
							<i class={info.icon}></i>
						</div>
						<div class="info-content">
							<h4>{info.title}</h4>
							<p>{info.value}</p>
						</div>
					</a>
				))}
			</div>
		</div>

		<form class="contact-form glass fade-in" id="contact-form">
			<h3>Envíame un Mensaje</h3>
			<div class="form-group">
				<label for="name">Nombre</label>
				<input type="text" id="name" name="name" required placeholder="Tu nombre" />
			</div>
			<div class="form-group">
				<label for="email">Email</label>
				<input type="email" id="email" name="email" required placeholder="tu@email.com" />
			</div>
			<div class="form-group">
				<label for="subject">Asunto</label>
				<input type="text" id="subject" name="subject" required placeholder="Asunto del mensaje" />
			</div>
			<div class="form-group">
				<label for="message">Mensaje</label>
				<textarea id="message" name="message" required placeholder="Tu mensaje"></textarea>
			</div>
			<button type="submit" class="submit-btn">
				<span class="btn-content">
					<i class="fas fa-paper-plane"></i>
					Enviar Mensaje
				</span>
				<span class="btn-glow"></span>
			</button>
			<div id="form-status" class="form-status"></div>
		</form>
	</div>
</section>

<style>
	.contact-container {
		display: grid;
		grid-template-columns: 1fr 2fr;
		gap: 4rem;
	}

	.contact-cards {
		display: grid;
		gap: 2rem;
		margin-bottom: 3rem;
	}

	.contact-card {
		display: flex;
		align-items: center;
		gap: 1.5rem;
		padding: 1.5rem;
		background: rgba(255, 255, 255, 0.05);
		border-radius: 10px;
		backdrop-filter: blur(10px);
		transition: transform 0.3s ease;
	}

	.contact-card:hover {
		transform: translateY(-5px);
	}

	.contact-icon {
		width: 50px;
		height: 50px;
		background: linear-gradient(83.21deg, var(--primary-color) 0%, var(--secondary-color) 100%);
		border-radius: 50%;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.contact-icon i {
		font-size: 1.5rem;
		color: white;
	}

	.contact-details h3 {
		font-size: 1.1rem;
		margin-bottom: 0.5rem;
		color: var(--text-color);
	}

	.contact-details a {
		color: var(--text-color);
		opacity: 0.8;
		text-decoration: none;
		transition: color 0.3s ease;
	}

	.contact-details a:hover {
		color: var(--primary-color);
	}

	.social-links {
		display: flex;
		gap: 1.5rem;
	}

	.social-link {
		width: 40px;
		height: 40px;
		background: rgba(255, 255, 255, 0.05);
		border-radius: 50%;
		display: flex;
		justify-content: center;
		align-items: center;
		color: var(--text-color);
		text-decoration: none;
		transition: all 0.3s ease;
	}

	.social-link:hover {
		background: linear-gradient(83.21deg, var(--primary-color) 0%, var(--secondary-color) 100%);
		color: white;
		transform: translateY(-3px);
	}

	.contact-form {
		background: rgba(255, 255, 255, 0.05);
		padding: 2rem;
		border-radius: 15px;
		backdrop-filter: blur(10px);
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

	.form-group label {
		display: block;
		margin-bottom: 0.5rem;
		color: var(--text-color);
		font-weight: 500;
	}

	.form-group input,
	.form-group textarea {
		width: 100%;
		padding: 0.8rem;
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 5px;
		background: rgba(255, 255, 255, 0.05);
		color: var(--text-color);
		font-family: inherit;
		transition: all 0.3s ease;
	}

	.form-group input:focus,
	.form-group textarea:focus {
		outline: none;
		border-color: var(--primary-color);
		background: rgba(255, 255, 255, 0.1);
	}

	.contact-form button {
		width: 100%;
		padding: 1rem;
		border: none;
		border-radius: 50px;
		background: linear-gradient(83.21deg, var(--primary-color) 0%, var(--secondary-color) 100%);
		color: white;
		font-weight: 500;
		cursor: pointer;
		transition: all 0.3s ease;
	}

	.contact-form button:hover {
		transform: translateY(-2px);
		box-shadow: 0 5px 15px rgba(50, 69, 255, 0.3);
	}

	@media (max-width: 968px) {
		.contact-container {
			grid-template-columns: 1fr;
		}

		.contact-info {
			text-align: center;
		}

		.contact-cards {
			justify-content: center;
		}

		.social-links {
			justify-content: center;
		}
	}

	@media (max-width: 768px) {
		.contact-card {
			padding: 1rem;
		}

		.contact-form {
			padding: 1.5rem;
		}
	}

	.form-status {
		margin-top: 1rem;
		padding: 0.5rem;
		border-radius: 5px;
		text-align: center;
		display: none;
	}

	.form-status.success {
		display: block;
		background: rgba(0, 255, 0, 0.1);
		color: #00ff00;
	}

	.form-status.error {
		display: block;
		background: rgba(255, 0, 0, 0.1);
		color: #ff0000;
	}

	.submit-btn:disabled {
		opacity: 0.7;
		cursor: not-allowed;
	}
</style>

<script>
	import emailjs from '@emailjs/browser';

	emailjs.init("F-qFJI_MfzGMLGVfy");

	const form = document.getElementById('contact-form') as HTMLFormElement;
	const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement;
	const formStatus = document.getElementById('form-status');

	const showStatus = (message: string, type: 'success' | 'error') => {
		if (formStatus) {
			formStatus.textContent = message;
			formStatus.className = `form-status ${type}`;
			setTimeout(() => {
				formStatus.className = 'form-status';
				formStatus.textContent = '';
			}, 5000);
		}
	};

	form?.addEventListener('submit', async (e: SubmitEvent) => {
		e.preventDefault();

		try {
			if (submitButton) {
				submitButton.disabled = true;
			}

			const formData = {
				name: (form.elements.namedItem('name') as HTMLInputElement).value,
				email: (form.elements.namedItem('email') as HTMLInputElement).value,
				title: `Mensaje de ${(form.elements.namedItem('name') as HTMLInputElement).value} <${(form.elements.namedItem('email') as HTMLInputElement).value}>`,
				message: `Remitente: ${(form.elements.namedItem('name') as HTMLInputElement).value}\nEmail: ${(form.elements.namedItem('email') as HTMLInputElement).value}\n\nMensaje:\n${(form.elements.namedItem('message') as HTMLTextAreaElement).value}`,
				from_name: `${(form.elements.namedItem('name') as HTMLInputElement).value} <${(form.elements.namedItem('email') as HTMLInputElement).value}>`,
				reply_to: (form.elements.namedItem('email') as HTMLInputElement).value
			};

			await emailjs.send(
				"service_0sb36qh",
				"template_x52sc3l",
				formData
			);

			showStatus('¡Mensaje enviado con éxito! Te responderé pronto.', 'success');
			form.reset();
		} catch (error) {
			console.error('Error al enviar el mensaje:', error);
			showStatus('Error al enviar el mensaje. Por favor, intenta nuevamente.', 'error');
		} finally {
			if (submitButton) {
				submitButton.disabled = false;
			}
		}
	});
</script> 